<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>studisu</artifactId>
        <groupId>de.ba.infosysbub.studisu</groupId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <packaging>${packaging.type}</packaging>
    <artifactId>studisu-server</artifactId>

    <organization>
        <name>Bundesagentur für Arbeit</name>
    </organization>

    <!-- Best-Practice: Die Versionsnummern werden oben zentral, uebersichtlich
         aufgelistet. -->
    <properties>
        <!--for remote devtools enablement -->
        <spring.devtools.remote.secret>mysecret</spring.devtools.remote.secret>
        <maven.build.timestamp.format>yyyyMMdd.HHmm</maven.build.timestamp.format>
        <cobertura.report.format>xml</cobertura.report.format>
        <!-- properties file path for pacify -->
        <build.pacify.filepath>../pacify/studisu-server-review.pacify.properties</build.pacify.filepath>
        <build.pacify.packagePath>${project.build.directory}</build.pacify.packagePath>
    </properties>
    <dependencies>
        <!-- spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
            <exclusions>
                <!-- use logback as slf4j impl instead of commons -->
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- hibernate validator from spring-boot-starter-web pom -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate.validator.version}</version>
        </dependency>

        <!-- JSON serialization -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <!-- reverse direction: to map json to java e.g. in contentclient we need
             jackson json media used for getting meta information like the berufe tv id -->
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <!-- Für HTTP-Content-Client normalen ContentZugriff -->
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <version>${javax.ws.rs.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>${jsoup.version}</version>
        </dependency>

        <!-- for container fake SAML we use code from apok-kontakt-service opensaml
             to create saml token contains bouncy castle to read certificates and keys -->
        <dependency>
            <groupId>org.opensaml</groupId>
            <artifactId>opensaml</artifactId>
            <version>${opensaml.version}</version>
        </dependency>

        <!-- Testing -->
        <!-- Powermock includes Mockito 2.10 -->
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito2</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jcl</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <!-- eh-cache + required java caching api -->
        <dependency>
            <groupId>org.ehcache</groupId>
            <artifactId>ehcache</artifactId>
            <version>${ehcache.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-api</artifactId>
            <version>${javax.cache.version}</version>
        </dependency>

        <!-- spring boot core -->
        <!-- including dependencies one-for-one here instead of using spring-boot-starter
             (more control of dependencies) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot</artifactId>
            <version>${spring.boot.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
            <version>${spring.boot.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- bildungsangebot service client classes and wsdl -->
        <dependency>
            <groupId>de.ba.infosysbub.studisu</groupId>
            <artifactId>bildungsangebotservice.client</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>

        <!-- dkz service client classes and wsdl -->
        <dependency>
            <groupId>de.ba.infosysbub.studisu</groupId>
            <artifactId>dkzservice.client</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- Wird von den Webservice-Schnittstellen (DKZ/Bildungsangebotservice)
             benötigt, damit die Klasse SecurityPolicyFeature gefunden wird -->
        <dependency>
            <groupId>com.oracle.weblogic</groupId>
            <artifactId>ws.api</artifactId>
            <version>1.1.0.0</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <!-- DEFAULT BUILD -->
    <build>
        <plugins>
            <!-- compile -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!-- This plugin's configuration is used to store Eclipse m2e settings
                     only. It has no influence on the Maven build itself. -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            org.codehaus.mojo
                                        </groupId>
                                        <artifactId>
                                            cobertura-maven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [2.7,)
                                        </versionRange>
                                        <goals>
                                            <goal>cobertura</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <!-- REPORTING -->
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.7</version>
            </plugin>
        </plugins>
    </reporting>


    <!-- PROFILES - local-springboot: produces an executable jar for development
        - wls-ci: produces a deployable war file for weblogic - PACIFY: only replace
        properties / Command: mvn exec:exec@pacify -P PACIFY -Dbuild.pacify.filepath=../pacify/studisu-server-review.pacify.properties -->
    <profiles>
        <!-- profile for local development with spring boot -->
        <profile>
            <id>local-springboot</id>
            <properties>
                <packaging.type>war</packaging.type>
            </properties>
            <dependencies>
                <!-- Spring boot tomcat starters -->
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                    <!-- sorgt dafür, dass eine Executable War erzeugt wird -->
                    <scope>provided</scope>
                    <version>${spring.boot.version}</version>
                </dependency>
                <!-- dev tools for hot refresh -->
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-devtools</artifactId>
                    <version>${spring.boot.version}</version>
                    <optional>true</optional>
                </dependency>

            </dependencies>

            <build>
                <resources>
                    <resource>
                        <directory>${basedir}/src/main/resources</directory>
                        <targetPath>${basedir}/target/classes</targetPath>
                        <excludes>
                            <exclude>**/*.properties</exclude>
                        </excludes>
                    </resource>
                    <!-- Local Build without weblogic keeps property files internal in the
                         classpath of the application. -->
                    <resource>
                        <directory>${basedir}/local/</directory>
                        <targetPath>${basedir}/target/classes</targetPath>
                        <includes>
                            <include>**/*.properties</include>
                        </includes>
                    </resource>
                    <resource>
                        <directory>${basedir}/local/</directory>
                        <targetPath>${basedir}/target/classes/META-INF</targetPath>
                        <includes>
                            <include>MANIFEST.MF</include>
                        </includes>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <version>${spring.boot.version}</version>
                        <configuration>
                            <layout>WAR</layout>
                            <!-- for debugging: * suspend=y, the JVM software starts in suspended
                                 mode and stays suspended until a debugger attaches to it. This is helpful
                                 if you want to start debugging as soon as the JVM software starts. -->
                            <!-- logroot für Pfad lokales Logging setzen (bei fork=true) -->
                            <jvmArguments>
                                -Xdebug
                                -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005
                                -Dlogroot=log
                            </jvmArguments>
                            <!-- for hot refresh -->
                            <excludeDevtools>false</excludeDevtools>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <configuration>
                            <archive>
                                <manifestEntries>
                                    <Implementation-Title>studisu-server.jar</Implementation-Title>
                                    <Implementation-Version>${project.version}</Implementation-Version>
                                    <Built-By>INFOSYSBUB</Built-By>
                                    <Specification-Vendor>Bundesagentur für Arbeit</Specification-Vendor>
                                    <Specification-Title>studisu-server</Specification-Title>
                                    <Implementation-Vendor-Id>de.ba.bub.studisu</Implementation-Vendor-Id>
                                    <Implementation-Vendor>Bundesagentur für Arbeit</Implementation-Vendor>
                                    <WebLogic-Application-Version>${project.version}</WebLogic-Application-Version>
                                    <Specification-Version>${project.version}</Specification-Version>
                                </manifestEntries>
                            </archive>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- profile for spring boot CI (jenkins) -->
        <profile>
            <id>springboot-ci</id>
            <properties>
                <packaging.type>jar</packaging.type>
            </properties>
            <dependencies>
                <!-- Spring boot tomcat starters -->
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                    <!-- sorgt dafür, dass eine Executable War erzeugt wird -->
                    <scope>provided</scope>
                    <version>${spring.boot.version}</version>
                </dependency>
                <!-- dev tools for hot refresh -->
                <!--dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-devtools</artifactId>
                    <version>${spring.boot.version}</version> <optional>true</optional>
                    </dependency -->
            </dependencies>
            <build>
                <resources>
                    <resource>
                        <directory>${basedir}/src/main/resources</directory>
                        <targetPath>${basedir}/target/classes</targetPath>
                        <excludes>
                            <exclude>**/*.properties</exclude>
                        </excludes>
                    </resource>
                    <!-- for springboot ci use the configuration with tokens which will
                         be replaced later on -->
                    <resource>
                        <directory>${basedir}/../studisu-uebergabe/config-rest/</directory>
                        <targetPath>${basedir}/target/classes</targetPath>
                        <includes>
                            <include>infosysbub-studisu-server.properties</include>
                        </includes>
                    </resource>
                    <resource>
                        <directory>${basedir}/local/</directory>
                        <targetPath>${basedir}/target/classes/META-INF</targetPath>
                        <includes>
                            <include>MANIFEST.MF</include>
                        </includes>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <version>${spring.boot.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>repackage</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <configuration>
                            <archive>
                                <manifestEntries>
                                    <Implementation-Title>studisu-server.jar</Implementation-Title>
                                    <Implementation-Version>${project.version}</Implementation-Version>
                                    <Built-By>INFOSYSBUB</Built-By>
                                    <Specification-Vendor>Bundesagentur für Arbeit</Specification-Vendor>
                                    <Specification-Title>studisu-server</Specification-Title>
                                    <Implementation-Vendor-Id>de.ba.bub.studisu</Implementation-Vendor-Id>
                                    <Implementation-Vendor>Bundesagentur für Arbeit</Implementation-Vendor>
                                    <WebLogic-Application-Version>${project.version}</WebLogic-Application-Version>
                                    <Specification-Version>${project.version}</Specification-Version>
                                </manifestEntries>
                            </archive>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- profile for wls deployment -->
        <profile>
            <id>wls-ci</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <packaging.type>war</packaging.type>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                    <!-- sorgt dafür, dass eine Executable War erzeugt wird -->
                    <scope>provided</scope>
                    <version>${spring.boot.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-legacy</artifactId>
                    <!-- version from kusos effective pom -->
                    <version>1.1.0.RELEASE</version>
                </dependency>
                <dependency>
                    <groupId>javax.servlet</groupId>
                    <artifactId>javax.servlet-api</artifactId>
                    <version>3.1.0</version>
                    <scope>provided</scope>
                </dependency>
            </dependencies>
            <build>
                <resources>
                    <resource>
                        <directory>${basedir}/src/main/resources</directory>
                        <targetPath>${basedir}/target/classes</targetPath>
                        <excludes>
                            <exclude>**/*.properties</exclude>
                        </excludes>
                    </resource>
                    <!-- Deployment on weblogic: property files will be kept external -->
                    <resource>
                        <directory>${project.basedir}/../studisu-uebergabe/config-rest</directory>
                        <targetPath>${basedir}/target</targetPath>
                        <includes>
                            <include>**/*</include>
                        </includes>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>cobertura-maven-plugin</artifactId>
                        <version>2.7</version>
                        <configuration>
                            <quiet>true</quiet>
                            <check>true</check>
                        </configuration>
                        <executions>
                            <execution>
                                <id>cobertura-coverage</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>cobertura</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>cobertura-clean</id>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>1.10</version>
                        <configuration>
                            <name>build.time</name>
                            <pattern>yyyyMMdd.HHmm</pattern>
                            <locale>de_DE</locale>
                            <timeZone>Europe/Berlin</timeZone>

                        </configuration>
                        <executions>
                            <execution>
                                <id>timestamp-property</id>
                                <goals>
                                    <goal>timestamp-property</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>2.6</version>
                        <configuration>
                            <warName>studisu-server</warName>
                            <failOnMissingWebXml>false</failOnMissingWebXml>
                            <archive>
                                <manifest>
                                    <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                    <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                                </manifest>
                                <manifestEntries>
                                    <Implementation-Title>${project.name}.${project.packaging}</Implementation-Title>
                                    <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
                                    <Specification-Vendor>${project.organization.name}</Specification-Vendor>
                                    <Specification-Version>${project.version}</Specification-Version>
                                    <WebLogic-Application-Version>${project.version}</WebLogic-Application-Version>
                                </manifestEntries>
                            </archive>
                            <excludes>
                                **/raw/*
                            </excludes>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.6</version>
                        <configuration>
                            <delimiters>
                                <delimiter>@</delimiter>
                            </delimiters>
                            <useDefaultDelimiters>false</useDefaultDelimiters>
                            <overwrite>true</overwrite>
                        </configuration>
                        <executions>
                            <execution>
                                <id>adapt-status</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/target/${project.name}-${project.version}/templates
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${basedir}/src/main/webapp/templates/raw</directory>
                                            <includes>
                                                <include>**/status.ftl</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- PACIFY VALIDATE -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.3.2</version>
                        <executions>
                            <execution>
                                <id>pacify-validate</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>package</phase>
                                <configuration>
                                    <executable>java</executable>
                                    <arguments>
                                        <argument>-jar</argument>
                                        <argument>${basedir}/../pacify/pacify-shaded-1.3.0.jar</argument>
                                        <argument>validate</argument>
                                        <argument>--packagePath=${project.build.directory}</argument>
                                        <argument>--resolvers=FileResolver</argument>
                                        <argument>-RFileResolver.file=${basedir}/${build.pacify.filepath}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>pacify-validateMarkerFiles</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>package</phase>
                                <configuration>
                                    <executable>java</executable>
                                    <arguments>
                                        <argument>-jar</argument>
                                        <argument>${basedir}/../pacify/pacify-shaded-1.3.0.jar</argument>
                                        <argument>validateMarkerFiles</argument>
                                        <argument>--packagePath=${build.pacify.packagePath}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Default-profile for install -->
        <profile>
            <id>install</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.12.4</version>
                        <configuration>
                            <argLine>-Xmx1024m -XX:MaxPermSize=512m</argLine>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
